{"version":3,"sources":["Pages/ContactsPage/ContactsPage.module.css","Components/Input/Input.module.css","Components/ContactListItem/ContactListItem.module.css","Components/Button/Button.module.css","Components/ContactForm/ContactForm.module.css","Components/Loader/Loader.module.css","Components/Container/Container.module.css","utils/searchName.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","Components/Button/Button.jsx","Components/Button/Button.container.jsx","Components/Input/Input.jsx","utils/capitalize.js","Components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","utils/filter.js","Components/ContactForm/ContactForm.container.jsx","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/ContactList/ContactList.container.jsx","Components/Filter/Filter.jsx","Components/Filter/Filter.container.jsx","Components/Loader/Loader.jsx","Pages/ContactsPage/ContactsPage.jsx","Pages/ContactsPage/ContactsPage.container.jsx","Components/Container/Container.jsx","Components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","searchName","array","query","find","el","name","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","Button","type","text","onDeletedById","id","onClick","className","styles","button","connect","dispatch","contactId","a","delete","Input","string","pattern","title","onChange","charAt","toUpperCase","slice","input","required","ContactForm","state","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","addContact","contacts","alert","onSubmit","this","form","Component","getAllContacts","items","getLoading","loading","getFilteredContacts","createSelector","filter","regExp","RegExp","item","test","filteredData","contact","post","data","ContactListItem","ContactList","map","Filter","onChangeFilter","App","wrapper","color","height","width","timeout","ContactsPage","fetchAllContacts","contactsSection","length","get","Container","children","container","contactsReducer","createReducer","_","payload","loadingReducer","filterReducer","errorReducer","middleware","getDefaultMiddleware","rootReducer","combineReducers","error","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.084ef65a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"ContactsPage_contactsSection__2nHUL\",\"wrapper\":\"ContactsPage_wrapper__2-7iL\",\"title\":\"ContactsPage_title__2Yy5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Input_text__bTpxP\",\"input\":\"Input_input__2HtF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1H1Kv\",\"text\":\"ContactListItem_text__19Ogw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3S4Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__34P02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__31kVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3KmAH\"};","  \r\nconst searchName = (array, query) => array.find(el => el.name === query);\r\n\r\nexport {searchName};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\nconst Button = ({ type = 'button', text = 'Button', onDeletedById, id }) => {\r\n  const handleClick = () => {\r\n    if (!id) return;\r\n    onDeletedById(id);\r\n  };\r\n\r\n  return (\r\n    <button type={type} onClick={handleClick} className={styles.button}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  id: PropTypes.string,\r\n  onDeletedById: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport Button from './Button';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeletedById: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Button);\r\n","import { capitalize } from '../../utils/capitalize';\r\nimport styles from './Input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({\r\n  type = 'text',\r\n  name = 'input',\r\n  pattern,\r\n  title = 'input',\r\n  onChange,\r\n}) => {\r\n  const text = capitalize(name);\r\n  return (\r\n    <label>\r\n      <span className={styles.text}>{text}</span>\r\n      <input\r\n        className={styles.input}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        required\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Input;\r\n","\r\nconst capitalize = string => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  export {capitalize};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { searchName } from '../../utils/searchName';\r\nimport Button from '../Button';\r\nimport Input from '../Input';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n\r\n    this.setState(() => ({\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { addContact, contacts } = this.props;\r\n\r\n    const isFind = searchName(contacts, name);\r\n    if (isFind) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    addContact(name, number);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  addContact: PropTypes.func,\r\n};\r\nexport default ContactForm;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { filteredData } from '../../utils/filter';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => filteredData(contacts, filter),\r\n);\r\n"," const filteredData = (array, filter) => {\r\n    const regExp = new RegExp(filter, 'gi');\r\n  \r\n    if (!filter) {\r\n      return array;\r\n    }\r\n    return array.filter(item => regExp.test(item.name));\r\n  };\r\n  \r\n  export {filteredData}","import { connect } from 'react-redux';\r\nimport ContactForm from './ContactForm';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import Button from '../Button';\r\nimport styles from './ContactListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ contact: { name, number, id } }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>\r\n        {name} : {number}\r\n      </span>\r\n      <Button text=\"Delete\" id={id} />\r\n    </li>\r\n  );\r\n};\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n};\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts = [] }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport ContactList from './ContactList';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport Input from '../Input';\r\n\r\nconst Filter = ({ onChangeFilter }) => {\r\n  return (\r\n    <Input type=\"text\" name=\"find contacts by name\" onChange={onChangeFilter} />\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport Filter from './Filter';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: ({ target: { value } }) => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"black\"\r\n          height={30}\r\n          width={30}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../../Components/ContactForm';\r\nimport ContactList from '../../Components/ContactList';\r\nimport Filter from '../../Components/Filter';\r\nimport Loader from '../../Components/Loader';\r\nimport styles from './ContactsPage.module.css';\r\n\r\nclass ContactsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllContacts();\r\n  }\r\n  render() {\r\n    const { contacts, loading } = this.props;\r\n    return (\r\n      <section className={styles.contactsSection}>\r\n        {loading && <Loader />}\r\n        <div className={styles.wrapper}>\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n          <ContactForm />\r\n          <h2 className={styles.title}>Contacts</h2>\r\n          {contacts.length > 1 && <Filter />}\r\n          {contacts.length > 0 && <ContactList />}\r\n          {contacts.length === 0 && (\r\n            <h3 className={styles.title}>Your Phonebook is empty!!!</h3>\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nContactsPage.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.bool,\r\n  fetchAllContacts: PropTypes.func,\r\n};\r\nexport default ContactsPage;\r\n","import { connect } from 'react-redux';\r\nimport ContactsPage from './ContactsPage';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  getAllContacts,\r\n  getLoading,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getAllContacts(state),\r\n  loading: getLoading(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n","import styles from './Container.module.css';\r\nconst Container = ({children}) => {\r\n    return ( \r\n        <div className={styles.container}>{children}</div>\r\n     );\r\n}\r\n \r\nexport default Container;","import ContactsPage from '../../Pages/ContactsPage';\r\nimport Container from '../Container';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <ContactsPage />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContactsError]: () => alert('Oops.Please try again'),\r\n  [addContactError]: () => alert('Oops.Please try again'),\r\n  [deleteContactError]: () => alert('Oops.Please try again'),\r\n});\r\n\r\nexport { contactsReducer, loadingReducer, filterReducer, errorReducer };\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  contactsReducer,\r\n  loadingReducer,\r\n  filterReducer,\r\n  errorReducer,\r\n} from './contacts/contacts-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: rootReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}